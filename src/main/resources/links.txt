https://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html

http://zetcode.com/java/inputstream/

https://en.wikipedia.org/wiki/Asynchronous_I/O

https://chasethedevil.github.io/post/non-blocking-with-traditional-java-io---on-the-use-of-inputstream.available-and-thread.sleep/
https://softwareengineering.stackexchange.com/questions/337225/parsing-multiple-files-and-their-contents-in-java-using-multithreading-without-e?answertab=active#tab-top

How to create a Java non-blocking InputStream from a HttpsURLConnection?
https://stackoverflow.com/questions/5049319/how-to-create-a-java-non-blocking-inputstream-from-a-httpsurlconnection
You can't 'know' that. Only ready() knows that (and InputStream.available(), in both cases where supported).
There is no other test. For some streams like SSL neither is supported, so ready() returns false and available() returns zero.
Also there is a difference between data being available and a complete line being available to readLine(),
including the line terminator. readLine() will block until all that arrives